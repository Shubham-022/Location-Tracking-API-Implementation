{"ast":null,"code":"var _jsxFileName = \"E:\\\\API-Updated\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 29.2163,\n  lng: 79.0108\n};\n\n// Predefined location (e.g., Nagpur)\nconst predefinedLocation = {\n  lat: 29.2163,\n  lng: 79.0882\n};\nfunction haversineDistance(coords1, coords2) {\n  const toRad = x => x * Math.PI / 180;\n  const R = 6371;\n  const dLat = toRad(coords2.lat - coords1.lat);\n  const dLon = toRad(coords2.lng - coords1.lng);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(coords1.lat)) * Math.cos(toRad(coords2.lat)) * Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nfunction App() {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const coords = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      setCurrentLocation(coords);\n      setDistance(haversineDistance(coords, predefinedLocation));\n    }, error => console.error('Error fetching location:', error), {\n      enableHighAccuracy: true\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAZv465T0Uib_XM5SjabRfM2Gddo5gNfqo\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 6,\n      children: [currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: predefinedLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), distance && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        background: 'white',\n        padding: '10px'\n      },\n      children: [\"Distance to predefined location: \", distance.toFixed(2), \" km\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9FjvBKsSNpc0tfhhUBd97F0orcY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","predefinedLocation","haversineDistance","coords1","coords2","toRad","x","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","App","_s","currentLocation","setCurrentLocation","distance","setDistance","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","enableHighAccuracy","googleMapsApiKey","children","mapContainerStyle","zoom","fileName","_jsxFileName","lineNumber","columnNumber","style","top","left","background","padding","toFixed","_c","$RefreshReg$"],"sources":["E:/API-Updated/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\n\nconst center = {\n  lat: 29.2163,\n  lng: 79.0108\n};\n\n// Predefined location (e.g., Nagpur)\nconst predefinedLocation = {\n  lat: 29.2163,\n  lng: 79.0882\n};\n\nfunction haversineDistance(coords1, coords2) {\n  const toRad = (x) => (x * Math.PI) / 180;\n  const R = 6371;\n  const dLat = toRad(coords2.lat - coords1.lat);\n  const dLon = toRad(coords2.lng - coords1.lng);\n  const a =\n    Math.sin(dLat / 2) ** 2 +\n    Math.cos(toRad(coords1.lat)) *\n      Math.cos(toRad(coords2.lat)) *\n      Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\nfunction App() {\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const coords = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setCurrentLocation(coords);\n        setDistance(haversineDistance(coords, predefinedLocation));\n      },\n      (error) => console.error('Error fetching location:', error),\n      { enableHighAccuracy: true }\n    );\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyAZv465T0Uib_XM5SjabRfM2Gddo5gNfqo\">\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={6}>\n        {currentLocation && <Marker position={currentLocation} />}\n        <Marker position={predefinedLocation} />\n      </GoogleMap>\n      {distance && (\n        <div style={{ position: 'absolute', top: 10, left: 10, background: 'white', padding: '10px' }}>\n          Distance to predefined location: {distance.toFixed(2)} km\n        </div>\n      )}\n    </LoadScript>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}